name: Go

on:
  push:
    branches: [ main ]
    paths:
      - '**.go'
      - 'go.mod'
      - '.golangci.yml'
      - '.github/workflows/go.yml'
  pull_request:
    paths:
      - '**.go'
      - 'go.mod'
      - '.golangci.yml'
      - '.github/workflows/go.yml'

env:
  GOPROXY: "https://proxy.golang.org"

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          args: --timeout=30m
      - name: Check Go module tidiness
        shell: bash
        run: |
          go mod tidy
          STATUS=$(git status --porcelain go.mod go.sum)
          if [ ! -z "$STATUS" ]; then
            echo "Running go mod tidy modified go.mod and/or go.sum"
            exit 1
          fi
  test:
    name: Test
    strategy:
      matrix:
        go-version: [ 1.16.x, 1.17.x, 1.18.x, 1.19.x ]
        platform: [ ubuntu-latest, macos-latest, windows-latest ]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Run tests with coverage
        run: go test -v -race -coverprofile=coverage -covermode=atomic ./...
      - name: Report results to Codecov
        if: ${{ matrix.platform == 'ubuntu-latest' }}
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage
      - name: Report results to DeepSource
        if: ${{ matrix.platform == 'ubuntu-latest' }}
        run: |
          curl https://deepsource.io/cli | sh
          ./bin/deepsource report --analyzer test-coverage --key go --value-file ./coverage
        env:
          DEEPSOURCE_DSN: ${{ secrets.DEEPSOURCE_DSN }}
